% Given points, fit 4th order (even degree) polynomials such that f(x) = 1.
% Input: 
% X: n*3;
function [r,fits] = FitPointsOnlyPolyOrder4(X, lambda, flag)
if nargin == 1
    lambda = 0;  % default to a free ellipsoid
end
if nargin <=2
    flag = 1;
end
x = X(:,1);
y = X(:,2);
z = X(:,3);

%  D = [ x.^4, ...
%        y.^4, ...
%        z.^4, ...
%       (x.^2) .* (y.^2), ...
%       (x.^2) .* (z.^2), ...
%       (y.^2) .* (z.^2), ...
%        x.^2, ...
%        y.^2, ... 
%        z.^2, ...
%        x, ...
%        y, ...
%        z, ...
%        x.^3 .* y, ...
%        x.^3 .* z, ...
%        y.^3 .* x, ...
%        y.^3 .* z, ...
%        z.^3 .* x, ...
%        z.^3 .* y, ...
%        ];
if (flag == 1)
 D = [ x.^4, ...
       y.^4, ...
       z.^4, ...
      (x.^2) .* (y.^2), ...
      (x.^2) .* (z.^2), ...
      (y.^2) .* (z.^2), ...
       x.^3 .* y, ...
       x.^3 .* z, ...
       y.^3 .* x, ...
       y.^3 .* z, ...
       z.^3 .* x, ...
       z.^3 .* y, ...
       x.^2 .* y .* z, ...
       y.^2 .* x .* z, ...
       z.^2 .* x .* y ...
       ];
elseif (flag == 0)   
 D = [ x.^4, ...
       y.^4, ...
       z.^4, ...
      (x.^2) .* (y.^2), ...
      (x.^2) .* (z.^2), ...
      (y.^2) .* (z.^2)
       ];
end
%size(D)   
r = ( D' * D + eye(size(D,2)) * lambda ) \ ( D' * ones( size( x, 1 ), 1 ) );
%r = max(0,r);
%r = ridge(ones( size( x, 1 ), 1 ), D, lambda);
maxd = max(abs(X)) * 8;
step = maxd / 50;
fits = D * r;
[ xx, yy, zz ] = meshgrid( -maxd:step:maxd, -maxd:step:maxd, -maxd:step:maxd);
% shape = r(1) * xx.^4 + r(2) * yy.^4 + r(3)* zz.^4 + ...
%         r(4) *(xx.^2).* (yy.^2) + r(5) *(xx.^2) .* (zz.^2) + r(6) * (yy.^2) .* (zz.^2) + ...
%         r(7) * (xx.^2) + r(8) * (yy.^2) + r(9) *(zz.^2) + ...
%         r(10) * xx + r(11) * yy + r(12) * zz + ...
%         r(13) *  xx.^3 .* yy + r(14) * xx.^3 .* zz + r(15) * yy.^3 .* xx + ...
%         r(16) * yy.^3 .* zz + r(17) * zz.^3 .* xx + r(18) * zz.^3 .* yy;
if (flag == 1)
shape = r(1) * xx.^4 + r(2) * yy.^4 + r(3) * zz.^4 + ...
        r(4) *(xx.^2).* (yy.^2) + r(5) *(xx.^2) .* (zz.^2) + r(6) * (yy.^2) .* (zz.^2) + ...      
        r(7) *  xx.^3 .* yy + r(8) * xx.^3 .* zz + r(9) * yy.^3 .* xx + ...
        r(10) * yy.^3 .* zz + r(11) * zz.^3 .* xx + r(12) * zz.^3 .* yy + ...
        r(13) * (xx.^2) .* yy .* zz + r(14) * (yy.^2) .* xx .* zz + r(15) *  (zz.^2) .* xx .* yy;
elseif (flag == 0)
shape = r(1) * xx.^4 + r(2) * yy.^4 + r(3)* zz.^4 + ...
        r(4) *(xx.^2).* (yy.^2) + r(5) *(xx.^2) .* (zz.^2) + r(6) * (yy.^2) .* (zz.^2);
end
figure;
axis tight;
plot3(x,y,z, 'r*');

p = patch(isosurface(xx,yy,zz,shape,1));
set( p, 'FaceColor', 'g','FaceAlpha', 0.25, 'EdgeColor', 'none' );
view(-10, 20);
%view(3);
camlight

% figure;
% axis vis3d;
% p = patch(isosurface(xx,yy,zz,shape,0.9999));
% set( p, 'FaceColor', 'g', 'EdgeColor', 'none' );
% view(3);
% camlight

end

