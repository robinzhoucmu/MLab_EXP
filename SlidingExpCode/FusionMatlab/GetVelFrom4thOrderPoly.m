% Input: Given poly coefficients and direction of forces (3*N), 
% Output: Get direction of velocities (3*N).
function [ dir_vel, vel ] = GetVelFrom4thOrderPoly(v, dir_f)
x = dir_f(1,:);
y = dir_f(2,:);
z = dir_f(3,:);

G = [x.^3; x.^2.*y; x.^2.*z; x.*y.^2; x.*y.*z; x.*z.^2; y.^3; y.^2.*z; y.*z.^2; z.^3]';
vel = G * [4*v(1), v(4), v(5); ...
                     3*v(4), 2*v(10), v(13); ...
                  3*v(5), v(13), 2*v(11); ...
                  2*v(10), 3*v(6), v(14); ...
                  2*v(13), 2*v(14), 2*v(15); ...
                  2*v(11), v(15), 3*v(8); ...
                  v(6), 4*v(2), v(7); ...
                  v(14), 3*v(7), 2*v(12); ...
                  v(15), 2*v(12), 3*v(9); ...
                  v(8), v(9), 4*v(3);];
dir_vel = bsxfun(@rdivide, vel,sqrt(sum(vel.^2, 2)));
end

